# Generated by Django 5.1.7 on 2025-08-26 18:43

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import wealth.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('wealth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestmentCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_amount', models.FloatField()),
                ('return_rate', models.FloatField()),
                ('additional_contribution', models.FloatField()),
                ('years', models.IntegerField()),
                ('compound', models.CharField(choices=[('annually', 'Annually'), ('monthly', 'Monthly')], max_length=10)),
                ('contribute_at', models.CharField(choices=[('beginning', 'Beginning'), ('end', 'End')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_category', models.CharField(default='Uncategorized', max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('investment_return', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=4)),
                ('asset_risk', models.IntegerField()),
                ('localized', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BalanceSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('own_house', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('household_contents', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('personal_cars', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('other_personal_assets', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_account', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('savings_account', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cash_at_hand', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('wealth_mgt_fund', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('stocks_shares', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('money_market_funds', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('unit_linked_investments', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cash_value_policies', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('real_estate', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('business_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('sacco_shares', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('retirement_plans', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('other_investments', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('personal_loans', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('overdraft_balances', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('sacco_loans', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('car_loans', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('mortgages', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('creditors', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('credit_cards', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('other_liabilities', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=10)),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='wealth.chatsession')),
            ],
        ),
        migrations.CreateModel(
            name='CustomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Custom Categories',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('remaining_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_min_payment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('strategy', models.CharField(choices=[('avalanche', 'Avalanche'), ('snowball', 'Snowball'), ('consolidation', 'Consolidation')], default='avalanche', max_length=20)),
                ('extra_monthly_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('extra_yearly_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paid', 'Paid'), ('paused', 'Paused'), ('deferred', 'Deferred')], default='active', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('initial_capital', models.FloatField()),
                ('savings_range', models.JSONField()),
                ('roi_range', models.JSONField()),
                ('expense_range', models.JSONField()),
                ('inflation_range', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GoalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal Category',
                'verbose_name_plural': 'Goal Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OneTimePassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('purpose', models.CharField(choices=[('email_verify', 'Email Verification'), ('password_reset', 'Password Reset')], default='email_verify', max_length=32)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget_type', models.CharField(choices=[('custom', 'Custom Budget'), ('classic', 'Classic Rule (50/30/20)'), ('flexible', 'Flexible Rule (50/10/10/30)')], default='custom', help_text='Type of budgeting rule to use', max_length=20)),
                ('name', models.CharField(default='Default Budget', help_text="Budget name (e.g., 'Monthly Budget - June 2025')", max_length=100)),
                ('budget_period_start', models.DateField(default=wealth.models.get_first_day_of_current_month)),
                ('budget_period_end', models.DateField(default=wealth.models.get_last_day_of_current_month)),
                ('total_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total income available for this budget period', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fixed_costs_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for fixed costs (rent, utilities, debt)', max_digits=12)),
                ('investment_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for investments (401k, IRA, etc.)', max_digits=12)),
                ('savings_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for savings (emergency, vacation, house down payment)', max_digits=12)),
                ('guilt_free_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for guilt-free spending (dining, entertainment, shopping)', max_digits=12)),
                ('needs_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for needs/living expenses (50/30/20 rule)', max_digits=12)),
                ('wants_allocation', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount allocated for wants/discretionary spending (50/30/20 rule)', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-budget_period_start'],
            },
        ),
        migrations.CreateModel(
            name='BudgetExpenseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, choices=[('housing', 'Housing & Rent'), ('utilities', 'Utilities'), ('insurance', 'Insurance'), ('debt_payments', 'Debt Payments'), ('phone', 'Phone & Internet'), ('investments', 'General Investments'), ('retirement_401k', '401(k) Contributions'), ('retirement_ira', 'IRA Contributions'), ('emergency_fund', 'Emergency Fund'), ('vacation_savings', 'Vacation Savings'), ('house_down_payment', 'House Down Payment'), ('general_savings', 'General Savings'), ('dining_out', 'Dining Out'), ('drinks', 'Drinks & Alcohol'), ('clothing', 'Clothes & Shoes'), ('entertainment', 'Entertainment'), ('shopping', 'Shopping'), ('personal_care', 'Personal Care'), ('subscriptions', 'Subscriptions & Memberships'), ('groceries', 'Groceries'), ('transportation', 'Transportation & Gas'), ('healthcare', 'Healthcare & Medical'), ('childcare', 'Childcare'), ('hobbies', 'Hobbies & Recreation'), ('travel', 'Travel'), ('gifts', 'Gifts'), ('donations', 'Charitable Donations'), ('home_maintenance', 'Home Maintenance'), ('education', 'Education & Learning'), ('pets', 'Pet Care'), ('other', 'Other Expenses')], max_length=50, null=True)),
                ('item_name', models.CharField(max_length=100)),
                ('planned_expense', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('actual_expense', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('priority', models.CharField(choices=[('high', 'High Priority'), ('medium', 'Medium Priority'), ('low', 'Low Priority')], default='medium', max_length=20)),
                ('expense_type', models.CharField(choices=[('fixed', 'Fixed - Same amount each period'), ('variable', 'Variable - Amount changes'), ('periodic', 'Periodic - Not every period')], default='variable', max_length=20)),
                ('due_date', models.DateField(blank=True, help_text='When this expense is due', null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('custom_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wealth.customcategory')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_items', to='wealth.personalbudget')),
            ],
            options={
                'ordering': ['priority', 'due_date', 'category'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioSimulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioMonitoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.FloatField(default=1.0)),
                ('actual_growth', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('difference', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('percentage_diff', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('monitoring_type', models.CharField(choices=[('total', 'Total Portfolio'), ('vehicle', 'Per Investment Vehicle')], default='total', max_length=10)),
                ('investment_vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wealth.investmentvehicle')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('simulation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wealth.portfoliosimulation')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioAssetAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_invested', models.DecimalField(decimal_places=2, max_digits=15)),
                ('investment_vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wealth.investmentvehicle')),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='wealth.portfoliosimulation')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.CharField(max_length=100)),
                ('risk_tolerance', models.CharField(max_length=50)),
                ('time_horizon_years', models.PositiveIntegerField()),
                ('monthly_contribution', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RetirementPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Plan Name')),
                ('current_age', models.PositiveIntegerField(verbose_name='Current Age')),
                ('retirement_age', models.PositiveIntegerField(verbose_name='Retirement Age')),
                ('life_expectancy', models.PositiveIntegerField(default=90, verbose_name='Life Expectancy')),
                ('current_savings', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Current Retirement Savings')),
                ('monthly_contribution', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Monthly Contribution')),
                ('expected_annual_return', models.DecimalField(decimal_places=2, default=7.0, max_digits=5, verbose_name='Expected Annual Return (%)')),
                ('expected_inflation', models.DecimalField(decimal_places=2, default=2.5, max_digits=5, verbose_name='Expected Inflation Rate (%)')),
                ('expected_monthly_expenses', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Expected Monthly Expenses in Retirement')),
                ('include_social_security', models.BooleanField(default=True, verbose_name='Include Social Security')),
                ('estimated_social_security', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Estimated Monthly Social Security')),
                ('has_pension', models.BooleanField(default=False, verbose_name='Has Pension')),
                ('monthly_pension_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Monthly Pension Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retirement_plans', to='wealth.goalcategory', verbose_name='Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retirement_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Retirement Plan',
                'verbose_name_plural': 'Retirement Plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RetirementProjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('year', models.IntegerField()),
                ('beginning_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('contributions', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('withdrawal', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('investment_returns', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ending_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('retirement_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projections', to='wealth.retirementplan')),
            ],
            options={
                'verbose_name': 'Retirement Projection',
                'verbose_name_plural': 'Retirement Projections',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='SavingsGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Goal Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(1.0)], verbose_name='Target Amount')),
                ('current_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Current Amount')),
                ('deadline', models.DateField(verbose_name='Goal Deadline')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals', to='wealth.goalcategory', verbose_name='Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='savings_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Savings Goal',
                'verbose_name_plural': 'Savings Goals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Amount')),
                ('notes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Notes')),
                ('contribution_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('savings_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='wealth.savingsgoal')),
            ],
            options={
                'ordering': ['-contribution_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='goalcategory',
            constraint=models.UniqueConstraint(fields=('name', 'created_by'), name='unique_category_per_user'),
        ),
        migrations.AddIndex(
            model_name='onetimepassword',
            index=models.Index(fields=['user', 'purpose', 'is_used'], name='wealth_onet_user_id_86bac3_idx'),
        ),
        migrations.AddIndex(
            model_name='onetimepassword',
            index=models.Index(fields=['created_at'], name='wealth_onet_created_16dc4d_idx'),
        ),
        migrations.AddConstraint(
            model_name='onetimepassword',
            constraint=models.UniqueConstraint(condition=models.Q(('is_used', False)), fields=('user', 'purpose'), name='uniq_active_otp_per_user_purpose'),
        ),
    ]
